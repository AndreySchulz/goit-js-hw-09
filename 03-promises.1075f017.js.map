{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,OA3CM,CACXQ,QAASC,SAASC,cAAc,SAChCC,OAAQF,SAASC,cAAc,YAG5BF,QAAQI,iBAAiB,UAE9B,SAAyBC,GACvBC,QAAQC,IAAI,GACZF,EAAMG,iBACN,MACEC,UAAYjB,MAAAkB,EAAKC,KAAEA,EAAIC,OAAEA,IACvBP,EAAMQ,cAEV,IAAIC,EAAcC,OAAOL,EAAMM,OAE3BC,EAAaF,OAAOJ,EAAKK,OAEzBE,EAAeH,OAAOH,EAAOI,OAEjC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAcC,GAAK,EACtC7B,EAAc6B,EAAGL,GACdM,MAAK,EAAC7B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAiC,OAAOC,QAAQ,uBAAqB/B,QAAiBC,OACnDc,QAAMC,IAAI,uBAAqBhB,QAAiBC,UAEnD+B,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAiC,OAAOG,QAAQ,sBAAoBjC,QAAiBC,OAClDc,QAAMC,IAAI,sBAAoBhB,QAAeC,UAEnDsB,GAAeG","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  formRef: document.querySelector('.form'),\n  btnRef: document.querySelector('button'),\n};\n\nrefs.formRef.addEventListener('submit', onHanddleSubmit);\n\nfunction onHanddleSubmit(event) {\n  console.log(1);\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let dalayHandle = Number(delay.value);\n\n  let stepHandle = Number(step.value);\n\n  let amountHandle = Number(amount.value);\n\n  for (let i = 1; i <= amountHandle; i += 1) {\n    createPromise(i, dalayHandle)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    dalayHandle += stepHandle;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","formRef","document","querySelector","btnRef","addEventListener","event","console","log","preventDefault","elements","delay1","step","amount","currentTarget","dalayHandle","Number","value","stepHandle","amountHandle","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.1075f017.js.map"}